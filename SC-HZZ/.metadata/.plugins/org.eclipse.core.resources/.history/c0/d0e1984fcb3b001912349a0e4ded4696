package com.gxhy.special.controller;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import com.gxhy.base.controller.BaseController;
import com.gxhy.base.model.RequestModel;
import com.gxhy.base.model.ResponseModel;
import com.gxhy.special.domain.ResultModel;
import com.gxhy.special.domain.RiverCourseModel;
import com.gxhy.special.persistence.RiverCourseMapper;
import com.gxhy.special.service.RiverCourseService;

/**
 * 河道专题
 * @author cr
 *
 */
@SuppressWarnings({"unchecked"})
@RestController
@RequestMapping("event/riverCourse")
public class RiverCourseController extends BaseController{

	@Autowired
	private RiverCourseService riverCourseService;
	/**
	 * 曝光台列表
	 * @param request
	 * @param model
	 * @return
	 * @throws Exception 
	 */
	@RequestMapping(value = "/getRiverCourses", method = RequestMethod.GET)
	public Object getExposureList(HttpServletRequest request,RiverCourseModel model) throws Exception{
		 String path=request.getServletContext().getContextPath();
		System.out.println(path);
		 String realPath=request.getServletContext().getRealPath("a.jks");
		 System.out.println(realPath);
		/*JSONObject map = new JSONObject();
		map = InitParams(model);
		RequestInitRanges(map,true,RiverCourseModel.class);
		String type=request.getParameter("type");
		map.put("type", type);
		map.put(RequestModel.SQLID, RiverCourseMapper.class.getName() + ".getRiverCourses");
		List<RiverCourseModel> list = riverCourseService.selectLists(map);*/
		return ResponseModel.Success(null);
	}
	
	/**
	 * 查询河道专题，事件专题和污染专题的比例
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/getPieRiverCourse", method = RequestMethod.GET)
	public Object getPieRiverCourse(HttpServletRequest request,int type){
		JSONObject map = new JSONObject();
		if(type < 1 || type > 4){
			return ResponseModel.Failure("type值不正确！");
		}else{
			map.put("type", type);
			map.put(RequestModel.SQLID, RiverCourseMapper.class.getName() + ".getPieRiverCourse");
			List<Integer> list =riverCourseService.selectLists(map);
			String []names = null; 
			if(type == 1){
				names = new String[5];
				names[0] = "河道侵占";
				names[1] = "河道排污";
				names[2] = "河底污泥";
				names[3] = "存在围垦湖泊";
				names[4] = "存在侵占水域";
			}
			if(type == 2){
				names = new String[3];
				names[0] = "非法采砂";
				names[1] = "涉水违建";	
				names[2] = "破坏岸线";
			}
			if(type == 3){
				names = new String[5];
				names[0] = "河水颜色";
				names[1] = "河岸垃圾";
				names[2] = "漂浮物";
				names[3] = "污水偷排";
				names[4] = "其它 ";
			}
			if(type == 4){
				names = new String[2];
				names[0] = "非法养殖";
				names[1] = "非法捕捞";
			}
			List<ResultModel> models=new ArrayList<ResultModel>();
			JSONObject maps = new JSONObject();
			for(int i=0;i<list.size();i++){
				int count=list.get(i);
				ResultModel model=new ResultModel();
				model.setValue(count);
				model.setName(names[i]);
				models.add(model);
			}
			maps.put("names", names);
			maps.put("models", models);
			return ResponseModel.Success(maps);
		}
	}
}
